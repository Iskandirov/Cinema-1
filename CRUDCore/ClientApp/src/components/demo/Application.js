import React, { Component } from 'react'
import { findDOMNode } from 'react-dom'
import { hot } from 'react-hot-loader'
import screenfull from 'screenfull'

import './reset.css'
import './defaults.css'
import './range.css'
import './App.css'
import './players.css'

import ReactPlayer from '../../ReactPlayer'
import Duration from './Duration'

const MULTIPLE_SOURCES = [
  { src: 'http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4', type: 'video/mp4' },
  { src: 'http://clips.vorwaerts-gmbh.de/big_buck_bunny.ogv', type: 'video/ogv' },
  { src: 'http://clips.vorwaerts-gmbh.de/big_buck_bunny.webm', type: 'video/webm' }
]

class Application extends Component {
  state = {
    url: null,
    pip: false,
    playing: true,
    controls: true,
    light: false,
    volume: 0.8,
    muted: true,
    played: 0,
    loaded: 0,
    duration: 0,
    playbackRate: 1.0,
    loop: false
  }
  load = url => {
    this.setState({
      url,
      played: 0,
      loaded: 0,
      pip: false
    })
  }
  playPause = () => {
    this.setState({ playing: !this.state.playing })
  }
  stop = () => {
    this.setState({ url: null, playing: false })
  }
  toggleControls = () => {
    const url = this.state.url
    this.setState({
      controls: !this.state.controls,
      url: null
    }, () => this.load(url))
  }
  toggleLight = () => {
    this.setState({ light: !this.state.light })
  }
  toggleLoop = () => {
    this.setState({ loop: !this.state.loop })
  }
  setVolume = e => {
    this.setState({ volume: parseFloat(e.target.value) })
  }
  toggleMuted = () => {
    this.setState({ muted: !this.state.muted })
  }
  setPlaybackRate = e => {
    this.setState({ playbackRate: parseFloat(e.target.value) })
  }
  togglePIP = () => {
    this.setState({ pip: !this.state.pip })
  }
  onPlay = () => {
    console.log('onPlay')
    this.setState({ playing: true })
  }
  onEnablePIP = () => {
    console.log('onEnablePIP')
    this.setState({ pip: true })
  }
  onDisablePIP = () => {
    console.log('onDisablePIP')
    this.setState({ pip: false })
  }
  onPause = () => {
    console.log('onPause')
    this.setState({ playing: false })
  }
  onSeekMouseDown = e => {
    this.setState({ seeking: true })
  }
  onSeekChange = e => {
    this.setState({ played: parseFloat(e.target.value) })
  }
  onSeekMouseUp = e => {
    this.setState({ seeking: false })
    this.player.seekTo(parseFloat(e.target.value))
  }
  onProgress = state => {
    console.log('onProgress', state)

    if (!this.state.seeking) {
      this.setState(state)
    }
  }
  onEnded = () => {
    console.log('onEnded')
    this.setState({ playing: this.state.loop })
  }
  onDuration = (duration) => {
    console.log('onDuration', duration)
    this.setState({ duration })
  }
  onClickFullscreen = () => {
    screenfull.request(findDOMNode(this.player))
  }
  renderLoadButton = (url, label) => {
    return (
      <button onClick={() => this.load(url)}>
        {label}
      </button>
    )
  }
  ref = player => {
    this.player = player
  }

  render() {
    const { url, playing, controls, light, volume, muted, loop, played, loaded, duration, playbackRate, pip } = this.state
    const SEPARATOR = ' ¬∑ '

    return (


      <div className='app'>

        <section className='section'>
          <table>
            <tr>
              <td>
                <form>
                  <p className="filmtext" >–¢–µ–ª–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å</p>
                  <div className="form-content" >
                    <p className="text" >
                      –ù–∞–∑–≤–∞–Ω–∏–µ:&nbsp;–¢–µ–ª–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å
                      –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ&nbsp;–Ω–∞–∑–≤–∞–Ω–∏–µ:&nbsp;London&nbsp;Boulevard
                      –ì–æ–¥:&nbsp;2010
                      –°—Ç—Ä–∞–Ω–∞:&nbsp;–°–®–ê,&nbsp;–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è
                      –°–ª–æ–≥–∞–Ω:&nbsp;¬´Not&nbsp;every&nbsp;criminal&nbsp;wants&nbsp;to&nbsp;be&nbsp;one.¬ª
                      –†–µ–∂–∏—Å—Å–µ—Ä:&nbsp;–£–∏–ª—å—è–º&nbsp;–ú–æ–Ω–∞—Ö—ç–Ω
                      –ñ–∞–Ω—Ä:&nbsp;–î—Ä–∞–º—ã,–ö—Ä–∏–º–∏–Ω–∞–ª—å–Ω—ã–µ
                      –í—Ä–µ–º—è:&nbsp;01:40:23
                      –¶–∏–∫–ª:&nbsp;–§–∏–ª—å–º—ã&nbsp;–ø—Ä–æ&nbsp;–ø—Ä–µ—Å—Ç—É–ø–Ω–∏–∫–æ–≤
                      –î–æ–ø.—è–∑—ã–∫ –æ–∑–≤—É—á–∫–∏:&nbsp;–ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                      –í&nbsp;–≥–ª–∞–≤–Ω—ã—Ö&nbsp;—Ä–æ–ª—è—Ö:&nbsp;–ö–æ–ª–∏–Ω&nbsp;–§–∞—Ä—Ä–µ–ª–ª,–ö–∏—Ä–∞&nbsp;–ù–∞–π—Ç–ª–∏,–†—ç–π&nbsp;<br />–£–∏–Ω—Å—Ç–æ–Ω,–î—ç–≤–∏–¥&nbsp;–¢—å—é–ª–∏—Å,–ê–Ω–Ω–∞&nbsp;–§—Ä–∏–ª,–ë–µ–Ω&nbsp;–ß–∞–ø–ª–∏–Ω,
                      –≠–¥–¥–∏&nbsp;–ú–∞—Ä—Å–∞–Ω,–°–∞–Ω–¥–∂–∏–≤&nbsp;–ë—Ö–∞—Å–∫–∞—Ä,&nbsp;–°—Ç–∏–≤–µ–Ω&nbsp;–ì—Ä—ç–º,<br />–û—Ñ–µ–ª–∏—è&nbsp;–õ–æ–≤–∏–±–æ–Ω–¥
                     </p>
                  </div>
                  <p className="text_g">–ì–∞–Ω–≥—Å—Ç–µ—Ä –ø–æ –∏–º–µ–Ω–∏ –ú–∏—Ç—á–µ–ª–ª –∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å –æ—á–∞—Ä–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –∫–∏–Ω–æ–∞–∫—Ç—Ä–∏—Å–æ–π –®–∞—Ä–ª–æ—Ç—Ç–æ–π, –∫–æ—Ç–æ—Ä–∞—è —è–≤–ª—è–µ—Ç—Å—è –æ—á–µ–Ω—å —Ä–∞–Ω–∏–º–æ–π –Ω–∞—Ç—É—Ä–æ–π, –ø–æ—ç—Ç–æ–º—É –≤—ã–Ω—É–∂–¥–µ–Ω–∞ –≤—Å–µ–≥–¥–∞ —Å–∫—Ä—ã–≤–∞—Ç—å—Å—è –æ—Ç –ø–∞–ø–∞—Ä–∞—Ü–∏ –∏ –ø—Ä–æ—á–∏—Ö –ø—Ä–µ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–µ–π. –ú–∏—Ç—á –æ—Ç—á–∞—è–Ω–Ω–æ —Ö–æ—á–µ—Ç –ø–æ—Ä–≤–∞—Ç—å —Å–æ —Å–≤–æ–∏–º –ø—Ä–æ—à–ª—ã–º –∏ –Ω–∞—Ö–æ–¥–∏—Ç —É—Ç–µ—à–µ–Ω–∏–µ –≤ —ç—Ç–æ–π –º–∏–ª–æ–π –¥–µ–≤—É—à–∫–µ, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–π –≥–æ—Ç–æ–≤ —Å–¥–µ–ª–∞—Ç—å –≤—Å–µ. –û–¥–Ω–∞–∫–æ, –∫—Ä–∏–º–∏–Ω–∞–ª—å–Ω—ã–π –º–∏—Ä –Ω–µ —Å–ø–µ—à–∏—Ç —Ä–∞—Å—Å—Ç–∞–≤–∞—Ç—å—Å—è —Å —Ç–∞–∫–∏–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–º, –∫–∞–∫ –ú–∏—Ç—á. –í—Å–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å —Ç–æ–≥–æ, —á—Ç–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≥–æ–ª–æ–≤–æ—Ä–µ–∑–æ–≤ —É–±–∏–≤–∞—é—Ç –µ–≥–æ –ª—É—á—à–µ–≥–æ –¥—Ä—É–≥–∞ –∏ —Ç–µ–ø–µ—Ä—å –ú–∏—Ç—á –±–µ—Ä–µ—Ç—Å—è –∑–∞ –∏—Ö –ø–æ–∏—Å–∫–∏. –ê —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –∫—Ä–∏–º–∏–Ω–∞–ª—å–Ω—ã–π –º–∞–≥–Ω–∞—Ç –≥–æ—Ä–æ–¥–∞ –†–æ–± –ì–∞–Ω—Ç —Å–æ–≤–µ—Ä—à–∞–µ—Ç —É–±–∏–π—Å—Ç–≤–æ –Ω–∞ –≥–ª–∞–∑–∞—Ö –ú–∏—Ç—á–∞, –¥–µ–ª–∞—è –µ–≥–æ —Å–æ—É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è. –¢–µ–ø–µ—Ä—å –ì–∞–Ω—Ç –ª—é–±—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏ –Ω–∞–º–µ—Ä–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –ú–∏—Ç—á–∞ –∫ —Å–µ–±–µ –≤ –∫–æ–º–∞–Ω–¥—É.
–°–º–æ—Ç—Ä–∏—Ç–µ –æ–Ω–ª–∞–π–Ω —Ñ–∏–ª—å–º ¬´–¢–µ–ª–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å¬ª –≤ —Ö–æ—Ä–æ—à–µ–º HD –∫–∞—á–µ—Å—Ç–≤–µ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ, –±–µ—Å–ø–ª–∞—Ç–Ω–æ –∏ –±–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.</p>
                  {/*class="embed-responsive embed-responsive-4by3"  */}
                  <div class="left">
                    <div className="embed-responsive embed-responsive-4by3">
                      <iframe class="embed-responsive-item" src="//www.youtube.com/embed/tInCbMNqRxo"></iframe>
                    </div>
                  </div>
                  <br /><br /><br /><br />
                  
                </form>
              </td>
            </tr>
          </table>
          <div className='player-wrapper'>
            <div class="module-button-hide">
              <input id="button" type="checkbox" />
              <label className="center"  onClick={(event) => this.setState({ url: 'https://www.youtube.com/watch?v=tInCbMNqRxo' })} for="button">–ù–∞—á–∞—Ç—å –ø—Ä–æ—Å–º–æ—Ç–µ—Ä       ü†æ</label>
            </div>
            <ReactPlayer
              ref={this.ref}
              className='react-player'
              width='100%'
              height='100%'
              url={url}
              pip={pip}
              playing={playing}
              controls={controls}
              light={light}
              loop={loop}
              playbackRate={playbackRate}
              volume={volume}
              muted={muted}
              onReady={() => console.log('onReady')}
              onStart={() => console.log('onStart')}
              onPlay={this.onPlay}
              onEnablePIP={this.onEnablePIP}
              onDisablePIP={this.onDisablePIP}
              onPause={this.onPause}
              onBuffer={() => console.log('onBuffer')}
              onSeek={e => console.log('onSeek', e)}
              onEnded={this.onEnded}
              onError={e => console.log('onError', e)}
              onProgress={this.onProgress}
              onDuration={this.onDuration}
            />
          </div>


        </section>
        <section className='section'>
          <table>
            <tbody>

              <tr>
                <th>YouTube</th>
                <td>
                  {/* {this.renderLoadButton('https://www.youtube.com/watch?v=tInCbMNqRxo', 'start')} */}

                </td>
              </tr>
              {/* <tr>
                <th>Custom URL</th>
                <td>
                  <input ref={input => { this.urlInput = input }} type='text' placeholder='Enter URL' />
                  <button onClick={() => this.setState({ url: this.urlInput.value })}>Load</button>
                </td>
              </tr>  */}
            </tbody>
          </table>

        </section>

      </div>
    )
  }
}

export default hot(module)(Application)